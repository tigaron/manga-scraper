definitions:
  v1Binding.PostProviderRequest:
    properties:
      host:
        example: asuratoon.com
        type: string
      is_active:
        example: true
        type: boolean
      list_path:
        example: /manga/list-mode/
        type: string
      name:
        example: Asura Scans
        type: string
      scheme:
        example: https://
        type: string
      slug:
        example: asura
        type: string
    required:
    - host
    - is_active
    - list_path
    - name
    - scheme
    - slug
    type: object
  v1Binding.PostScrapeChapterList:
    properties:
      provider:
        example: asura
        type: string
      series:
        example: reincarnator
        type: string
    required:
    - provider
    - series
    type: object
  v1Binding.PostScrapeSeriesList:
    properties:
      provider:
        example: asura
        type: string
    required:
    - provider
    type: object
  v1Binding.PutProviderRequest:
    properties:
      host:
        example: asuratoon.com
        type: string
      is_active:
        example: true
        type: boolean
      list_path:
        example: /manga/list-mode/
        type: string
      name:
        example: Asura Scans
        type: string
      scheme:
        example: https://
        type: string
    required:
    - host
    - is_active
    - list_path
    - name
    - scheme
    type: object
  v1Binding.PutScrapeChapterDetail:
    properties:
      chapter:
        example: reincarnator-chapter-27
        type: string
      provider:
        example: asura
        type: string
      series:
        example: reincarnator
        type: string
    required:
    - chapter
    - provider
    - series
    type: object
  v1Binding.PutScrapeSeriesDetail:
    properties:
      provider:
        example: asura
        type: string
      series:
        example: reincarnator
        type: string
    required:
    - provider
    - series
    type: object
  v1Response.Response:
    properties:
      data: {}
      detail: {}
      error:
        type: boolean
      message:
        type: string
    type: object
info:
  contact:
    email: admin@fourleaves.studio
    name: API Support
    url: https://manga-scraper.hostinger.fourleaves.studio/support
  description: This is a Manga Scraper API server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://manga-scraper.hostinger.fourleaves.studio/terms
  title: Manga Scraper API
  version: "1.0"
paths:
  /api/v1/chapters/{provider_slug}/{series_slug}:
    get:
      description: Get paginated chapter list
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      - description: Series slug
        example: reincarnator
        in: path
        name: series_slug
        required: true
        type: string
      - description: Page
        example: "10"
        in: query
        name: page
        required: true
        type: string
      - description: Size
        example: "100"
        in: query
        name: size
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Get paginated chapter list
      tags:
      - chapters
  /api/v1/chapters/{provider_slug}/{series_slug}/_all:
    get:
      description: Get all chapter list
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      - description: Series slug
        example: reincarnator
        in: path
        name: series_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Get all chapter list
      tags:
      - chapters
  /api/v1/chapters/{provider_slug}/{series_slug}/_list:
    get:
      description: Get chapter list only
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      - description: Series slug
        example: reincarnator
        in: path
        name: series_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Get chapter list only
      tags:
      - chapters
  /api/v1/chapters/{provider_slug}/{series_slug}/{chapter_slug}:
    get:
      description: Get chapter by slug
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      - description: Series slug
        example: reincarnator
        in: path
        name: series_slug
        required: true
        type: string
      - description: Chapter slug
        example: reincarnator-chapter-0
        in: path
        name: chapter_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Get chapter by slug
      tags:
      - chapters
  /api/v1/providers:
    get:
      description: Get provider list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      summary: Get provider list
      tags:
      - providers
    post:
      consumes:
      - application/json
      description: Create provider
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1Binding.PostProviderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1Response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1Response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - cookieAuth: []
      summary: Create provider
      tags:
      - providers
  /api/v1/providers/{provider_slug}:
    get:
      description: Get provider by slug
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      summary: Get provider by slug
      tags:
      - providers
    put:
      consumes:
      - application/json
      description: Update provider
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1Binding.PutProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1Response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - cookieAuth: []
      summary: Update provider
      tags:
      - providers
  /api/v1/scrape-requests/chapters/detail:
    put:
      consumes:
      - application/json
      description: Create request to scrape chapter detail
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1Binding.PutScrapeChapterDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1Response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Create request to scrape chapter detail
      tags:
      - scrape-requests
  /api/v1/scrape-requests/chapters/list:
    post:
      consumes:
      - application/json
      description: Create request to scrape chapter list
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1Binding.PostScrapeChapterList'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1Response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Create request to scrape chapter list
      tags:
      - scrape-requests
  /api/v1/scrape-requests/series/detail:
    put:
      consumes:
      - application/json
      description: Create request to scrape series detail
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1Binding.PutScrapeSeriesDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1Response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Create request to scrape series detail
      tags:
      - scrape-requests
  /api/v1/scrape-requests/series/list:
    post:
      consumes:
      - application/json
      description: Create request to scrape series list
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1Binding.PostScrapeSeriesList'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1Response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - TokenAuth: []
      summary: Create request to scrape series list
      tags:
      - scrape-requests
  /api/v1/search:
    get:
      description: Get series search result
      parameters:
      - description: Query
        example: high school
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      summary: Get series search result
      tags:
      - search
    put:
      description: Feed the open search engine
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1Response.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      security:
      - cookieAuth: []
      summary: Feed the open search engine
      tags:
      - search
  /api/v1/series/{provider_slug}:
    get:
      description: Get paginated series list
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      - description: Page
        example: "10"
        in: query
        name: page
        required: true
        type: string
      - description: Size
        example: "100"
        in: query
        name: size
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      summary: Get paginated series list
      tags:
      - series
  /api/v1/series/{provider_slug}/_all:
    get:
      description: Get all series list
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      summary: Get all series list
      tags:
      - series
  /api/v1/series/{provider_slug}/{series_slug}:
    get:
      description: Get series by slug
      parameters:
      - description: Provider slug
        example: asura
        in: path
        name: provider_slug
        required: true
        type: string
      - description: Series slug
        example: reincarnator
        in: path
        name: series_slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1Response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1Response.Response'
      summary: Get series by slug
      tags:
      - series
  /health:
    get:
      description: Get health check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1Response.Response'
      summary: Get health check
securityDefinitions:
  TokenAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
